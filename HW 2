library(readr)
library(readxl)
library(dplyr)
library(triangle)
Analysis_Data <- read_excel("C:/Users/dell/Documents/R code fall/Simulation/Analysis_Data.xlsx", 
                            sheet = "Drilling Cost", skip = 2)
Oil_Prices <- read_excel("C:/Users/dell/Documents/R code fall/Simulation/Analysis_Data.xlsx", 
                         sheet = "Price Projections", skip = 2)

Analysis_Data <- Analysis_Data %>% 
  rename(Oil_Cost = 'U.S. Nominal Cost per Crude Oil Well Drilled (Thousand Dollars per Well)',
         Gas_Cost = 'U.S. Nominal Cost per Natural Gas Well Drilled (Thousand Dollars per Well)',
         DryWell_Cost = 'U.S. Nominal Cost per Dry Well Drilled (Thousand Dollars per Well)',
         Oil_Return = 'Arithmetic Return - Crude Oil',
         Gas_Return = 'Arithmetic Return - Natural Gas',
         DryWell_Return = 'Arithmetic Return - Dry Well')

# Only want 1991-2006
Analysis_Data <- subset(Analysis_Data, as.Date(Date) > "1990-06-30" & as.Date(Date) < "2007-06-30")

# Get averages and only care about 2006 price for P0
Analysis_Data$drilling_cost=rowMeans(Analysis_Data[,c("Oil_Cost","Gas_Cost","DryWell_Cost")], na.rm=TRUE)

# Put all the returns into one vector
distribution <- as.numeric(c(Analysis_Data$Oil_Return,Analysis_Data$Gas_Return,Analysis_Data$DryWell_Return))

# Get SD and mean for normal distribution
sd_norm <- sd(distribution)
mean_norm <- mean(distribution)

#create functions for correlation
standardize <- function(x){
  x.std = (x - mean(x))/sd(x)
  return(x.std)
}

#to get it back to original data after adding correlation
destandardize <- function(x.std, x){
  x.old = (x.std * sd(x)) + mean(x)
  return(x.old)
}


set.seed(999)

#empty vectors for both outputs
dry_well <- rep(0,1000)
NPV <- rep(0,1000)
for(i in 1:1000){
  
  ##drilling costs
  P0 <- 2279.80*1000 # Baseline price at 2006 or time 0
  
  r <- rnorm(n=1, mean=mean_norm, sd=sd_norm)
  
  Pt <- P0*(1 + r) #2007
  
  for(j in 1:5){ # 2008-2012
    r <- rnorm(n=1, mean=mean_norm, sd=sd_norm)
    Pt <- Pt*(1+r)
  }
  
  for(l in 1:3){ # 2013-2015
    r <- rtriangle(1, a = 0.07, b = .22, c = .0917)
    Pt <- Pt*(1-r)
  }
  
  for(b in 1:4){ # 2016-2019
    r <- rtriangle(1, a = 0.02, b = .06, c = .05)
    Pt <- Pt*(1+r)
  }
  
  acres <- rnorm(n=1, mean=600, sd=50)
  
  seismic <- rnorm(n=1, mean = 3, sd = 0.35)
  
  overhead <- rtriangle(1, a = 172000, b = 279500, c = 215000)
  
  dry <- (960*acres) + (43000*seismic) + overhead + Pt
  
  dry_well[i] <- dry #create this separately for giving cost of single dry well
  
  completion <- rnorm(n=1, 390000, 50000)
  
  initial_cost <- dry + completion -overhead
  
  ##production
  
  rate_begin <-  rlnorm(30, meanlog = 6, sdlog = .28 )
  Decline_rate <- runif(30, .15,.32)
  
  #correlation
  R <- matrix(data=cbind(1,0.64, 0.64, 1), nrow=2)
  U <- t(chol(R)) 
  Both <- cbind(standardize(rate_begin), standardize(Decline_rate))
  begin.r <- U %*% t(Both) #matrix multiplication with U. transpose data to make it work
  begin.r <- t(begin.r) #transpose it back
  
  final <- cbind(destandardize(begin.r[,1], rate_begin), destandardize(begin.r[,2], Decline_rate))
  
  IP <- final[1,1]
  Decline_rate <- final[1,2]
  
  Rate <- rep(0,16)
  for ( j in 1:16){
    Rate[j] <- IP*(1-Decline_rate)^(j-1)
  }
  Volume <- rep(0,15)
  for (j in 1:15){
    Volume[j] <- 365*(Rate[j]+Rate[j+1])/2
  }
  
  FNR <- rep(0,15)
  for(k in 1:15){
    min <- as.integer(Oil_Prices[k,3])
    max <- as.integer(Oil_Prices[k,2])
    mean <- as.integer(Oil_Prices[k,4])
    price <- rtriangle(1,min,max,mean)
    
    NRI <- rnorm(1, .75,.02) 
    Revenue <- NRI*Volume[k]*price
    
    operating_rate <- rnorm(1, 2.25, .3)
    operating_cost <- operating_rate*Volume[k]
    
    severance <-1 - 0.046
    WACC = 0.1
   
   
    FNR[k] <- ((severance*Revenue) - operating_cost-overhead)/((1+WACC)^k)
    
  }

  ##NPV
  NPV[i] = -initial_cost + sum(FNR) 
  
}
